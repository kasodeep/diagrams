 Component Diagram:
 	A component diagram is a type of diagram used in Unified Modeling Language (UML) to depict how components are wired together to form larger components or software systems.
 	It illustrates the structure of complex systems and is used to verify that a systemâ€™s required functionality is acceptable.

Component:
	A modular part of the system, like software modules, libraries, executables, or packages.
	Represented by a rectangle with the keyword <<component>> or a rectangle with two smaller rectangles on its left side.

	Provided Interfaces:
		Represented with a lollipop symbol, showing services offered by the component.

	Required Interfaces:
		Represented with a socket symbol, showing dependencies on other components.

Node:
	Represents a physical device or environment where components are deployed (e.g., servers, PCs).
	Used in deployment diagrams but relevant in certain complex component diagrams.

Interface:
	Defines a contract of operations and attributes a component provides or requires.
	Represented by a circle (provided) or a semicircle (required).

Dependency:
	Shows the relationship between two components where one depends on the other.
	Represented by a dashed arrow.

Assembly Connector:
	Shows how components are connected to each other via provided and required interfaces.
	Represented by a line between an interface lollipop and a socket.

Port:
	Represents interaction points on a component.
	Shown as a small square on the border of a component.
